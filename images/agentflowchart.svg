flowchart TD
    subgraph "Conversation Initialization"
        direction TB
        START[User Opens Chat Interface]
        WELCOME[AI: Welcome Message<br/>CreditWise Introduction<br/>Request for Name]
        CONTEXT_INIT[Initialize Conversation Context<br/>Empty User Profile<br/>Set Collection Priority]
    end
    
    subgraph "Data Collection Phase"
        direction TB
        
        subgraph "Name Collection (Priority 1)"
            NAME_ASK[AI: What's your name?<br/>Personalization setup]
            NAME_INPUT[User Provides Name]
            NAME_EXTRACT[Extract Name from Input<br/>Regex patterns + validation]
            NAME_STORE[Store in Profile: name<br/>Update conversation context]
            NAME_ACK[AI: Nice to meet you, Name!<br/>Personal greeting established]
        end
        
        subgraph "Income Assessment (Priority 2)"
            INCOME_ASK[AI: What's your monthly income?<br/>Financial eligibility check]
            INCOME_INPUT[User Provides Income]
            INCOME_EXTRACT[Extract Income Amount<br/>Handle lakhs, thousands, k format]
            INCOME_VALIDATE{Income Valid?<br/>â‚¹10K - â‚¹10L range}
            INCOME_STORE[Store in Profile: income<br/>Calculate card eligibility tier]
            INCOME_ACK[AI: Great! With â‚¹X income<br/>you qualify for Y-tier cards]
        end
        
        subgraph "Age Verification (Priority 3)"
            AGE_ASK[AI: What's your age?<br/>Demographic assessment]
            AGE_INPUT[User Provides Age]
            AGE_EXTRACT[Extract Age Number<br/>Various input formats]
            AGE_VALIDATE{Age Valid?<br/>18-80 years range}
            AGE_STORE[Store in Profile: age<br/>Age-based card matching]
            AGE_ACK[AI: Perfect! Age X noted<br/>for eligibility assessment]
        end
        
        subgraph "Credit Score Collection (Priority 4)"
            CREDIT_ASK[AI: What's your credit score?<br/>Approval probability assessment]
            CREDIT_INPUT[User Provides Credit Score]
            CREDIT_EXTRACT[Extract Credit Score<br/>300-900 range handling]
            CREDIT_VALIDATE{Score Valid?<br/>300-900 range}
            CREDIT_STORE[Store in Profile: creditScore<br/>Approval chance calculation]
            CREDIT_ACK[AI: Excellent! Score X helps<br/>find best approval chances]
        end
        
        subgraph "Benefits Preferences (Priority 5)"
            BENEFITS_ASK[AI: What benefits matter most?<br/>cashback, travel, rewards?]
            BENEFITS_INPUT[User Provides Preferences]
            BENEFITS_EXTRACT[Extract Benefit Type<br/>Categorize preferences]
            BENEFITS_STORE[Store in Profile: benefits<br/>Preference matching setup]
            BENEFITS_ACK[AI: Perfect! I have everything<br/>needed for analysis]
        end
    end
    
    subgraph "Decision Points & Validations"
        direction TB
        
        DATA_CHECK{Data Complete?<br/>All 5 fields collected}
        EARLY_REQUEST{User asks for<br/>recommendations early?}
        INVALID_INPUT{Invalid input<br/>detected?}
        SYSTEM_PROMPT{User asks for<br/>system prompt?}
        DEMO_REQUEST{User requests<br/>demo or premium?}
        
        DEFLECT[AI: I need more information first<br/>Continue data collection]
        PROMPT_DEFLECT[AI: I'm here to help with cards<br/>not technical details]
        VALIDATION_ERROR[AI: Please provide valid input<br/>Re-ask with guidance]
        DEMO_HANDLER[Show Demo Cards<br/>3 sample recommendations]
        PREMIUM_HANDLER[Show Premium Cards<br/>Filter high-tier options]
    end
    
    subgraph "Analysis Trigger"
        direction TB
        ANALYSIS_START[AI: Perfect! Let me analyze<br/>the best cards for you...]
        PROFILE_COMPLETE[Complete User Profile<br/>name + income + age + score + benefits]
        ANALYSIS_SIGNAL[Trigger Recommendation Engine<br/>Start AI processing]
    end
    
    subgraph "Recommendation Engine Integration"
        direction TB
        LOAD_CARDS[Load Credit Card Database<br/>Supabase or fallback data]
        FILTER_ELIGIBLE[Filter by Income Eligibility<br/>Remove inapplicable cards]
        SCORE_CARDS[AI Scoring Algorithm<br/>Multi-factor analysis]
        RANK_RESULTS[Rank by Score<br/>Select top 3 matches]
        GENERATE_REASONS[Generate Match Reasons<br/>Personalized explanations]
    end
    
    subgraph "Response Generation"
        direction TB
        INTRO_MESSAGE[AI: Personalized Introduction<br/>Based on your profile...]
        CARD_1[ðŸ¥‡ Top Recommendation<br/>Interactive card widget]
        CARD_2[ðŸ¥ˆ Alternative Option<br/>Interactive card widget]
        CARD_3[ðŸ¥‰ Additional Choice<br/>Interactive card widget]
        SUMMARY[AI: Comprehensive Summary<br/>Rankings, reasons, next steps]
    end
    
    subgraph "Conversation Continuation"
        direction TB
        USER_RESPONSE{User Response Type}
        DETAILS_REQUEST[User: Know More Details<br/>About specific card]
        APPLY_REQUEST[User: Apply Now<br/>Direct application]
        COMPARE_REQUEST[User: Compare Cards<br/>Side-by-side analysis]
        QUESTION_ASK[User: Specific Question<br/>About features/benefits]
        
        PROVIDE_DETAILS[AI: Detailed Card Analysis<br/>Features, benefits, fees]
        REDIRECT_APPLY[Open Bank Application<br/>External link redirect]
        NAVIGATE_COMPARE[Navigate to Compare Page<br/>Pre-selected cards]
        ANSWER_QUESTION[AI: Specific Answer<br/>Context-aware response]
    end
    
    subgraph "Error Handling & Recovery"
        direction TB
        NETWORK_ERROR[Network/API Error<br/>Connection failure]
        TIMEOUT_ERROR[Request Timeout<br/>Slow response]
        VALIDATION_FAIL[Input Validation Failure<br/>Invalid data format]
        NO_CARDS_FOUND[No Eligible Cards<br/>Profile too restrictive]
        
        RETRY_LOGIC[Exponential Backoff Retry<br/>Attempt recovery]
        ERROR_MESSAGE[AI: Apologetic Error Message<br/>Suggest alternatives]
        FALLBACK_DATA[Use Cached/Fallback Data<br/>Ensure service continuity]
        ADJUST_CRITERIA[AI: Suggest Profile Adjustment<br/>Broaden eligibility]
    end
    
    %% Main Flow Connections
    START --> WELCOME
    WELCOME --> CONTEXT_INIT
    CONTEXT_INIT --> NAME_ASK
    
    NAME_ASK --> NAME_INPUT
    NAME_INPUT --> NAME_EXTRACT
    NAME_EXTRACT --> NAME_STORE
    NAME_STORE --> NAME_ACK
    NAME_ACK --> INCOME_ASK
    
    INCOME_ASK --> INCOME_INPUT
    INCOME_INPUT --> INCOME_EXTRACT
    INCOME_EXTRACT --> INCOME_VALIDATE
    INCOME_VALIDATE -->|Valid| INCOME_STORE
    INCOME_VALIDATE -->|Invalid| VALIDATION_ERROR
    VALIDATION_ERROR --> INCOME_ASK
    INCOME_STORE --> INCOME_ACK
    INCOME_ACK --> AGE_ASK
    
    AGE_ASK --> AGE_INPUT
    AGE_INPUT --> AGE_EXTRACT
    AGE_EXTRACT --> AGE_VALIDATE
    AGE_VALIDATE -->|Valid| AGE_STORE
    AGE_VALIDATE -->|Invalid| VALIDATION_ERROR
    AGE_STORE --> AGE_ACK
    AGE_ACK --> CREDIT_ASK
    
    CREDIT_ASK --> CREDIT_INPUT
    CREDIT_INPUT --> CREDIT_EXTRACT
    CREDIT_EXTRACT --> CREDIT_VALIDATE
    CREDIT_VALIDATE -->|Valid| CREDIT_STORE
    CREDIT_VALIDATE -->|Invalid| VALIDATION_ERROR
    CREDIT_STORE --> CREDIT_ACK
    CREDIT_ACK --> BENEFITS_ASK
    
    BENEFITS_ASK --> BENEFITS_INPUT
    BENEFITS_INPUT --> BENEFITS_EXTRACT
    BENEFITS_EXTRACT --> BENEFITS_STORE
    BENEFITS_STORE --> BENEFITS_ACK
    BENEFITS_ACK --> DATA_CHECK
    
    %% Decision Point Flows
    DATA_CHECK -->|Complete| ANALYSIS_START
    DATA_CHECK -->|Incomplete| DEFLECT
    DEFLECT --> NAME_ASK
    
    %% Special Request Handling
    NAME_INPUT -.-> EARLY_REQUEST
    INCOME_INPUT -.-> EARLY_REQUEST
    AGE_INPUT -.-> EARLY_REQUEST
    CREDIT_INPUT -.-> EARLY_REQUEST
    EARLY_REQUEST -->|Yes| DEFLECT
    
    NAME_INPUT -.-> SYSTEM_PROMPT
    SYSTEM_PROMPT -->|Yes| PROMPT_DEFLECT
    PROMPT_DEFLECT --> NAME_ASK
    
    NAME_INPUT -.-> DEMO_REQUEST
    DEMO_REQUEST -->|Demo| DEMO_HANDLER
    DEMO_REQUEST -->|Premium| PREMIUM_HANDLER
    DEMO_HANDLER --> USER_RESPONSE
    PREMIUM_HANDLER --> USER_RESPONSE
    
    %% Analysis Flow
    ANALYSIS_START --> PROFILE_COMPLETE
    PROFILE_COMPLETE --> ANALYSIS_SIGNAL
    ANALYSIS_SIGNAL --> LOAD_CARDS
    LOAD_CARDS --> FILTER_ELIGIBLE
    FILTER_ELIGIBLE --> SCORE_CARDS
    SCORE_CARDS --> RANK_RESULTS
    RANK_RESULTS --> GENERATE_REASONS
    GENERATE_REASONS --> INTRO_MESSAGE
    
    %% Response Generation Flow
    INTRO_MESSAGE --> CARD_1
    CARD_1 --> CARD_2
    CARD_2 --> CARD_3
    CARD_3 --> SUMMARY
    SUMMARY --> USER_RESPONSE
    
    %% Continuation Flow
    USER_RESPONSE --> DETAILS_REQUEST
    USER_RESPONSE --> APPLY_REQUEST
    USER_RESPONSE --> COMPARE_REQUEST
    USER_RESPONSE --> QUESTION_ASK
    
    DETAILS_REQUEST --> PROVIDE_DETAILS
    APPLY_REQUEST --> REDIRECT_APPLY
    COMPARE_REQUEST --> NAVIGATE_COMPARE
    QUESTION_ASK --> ANSWER_QUESTION
    
    PROVIDE_DETAILS --> USER_RESPONSE
    ANSWER_QUESTION --> USER_RESPONSE
    
    %% Error Handling
    LOAD_CARDS -.-> NETWORK_ERROR
    SCORE_CARDS -.-> TIMEOUT_ERROR
    FILTER_ELIGIBLE -.-> NO_CARDS_FOUND
    
    NETWORK_ERROR --> RETRY_LOGIC
    TIMEOUT_ERROR --> RETRY_LOGIC
    RETRY_LOGIC -->|Success| SCORE_CARDS
    RETRY_LOGIC -->|Failure| FALLBACK_DATA
    FALLBACK_DATA --> SCORE_CARDS
    
    NO_CARDS_FOUND --> ADJUST_CRITERIA
    ADJUST_CRITERIA --> DEFLECT
    
    %% Styling
    classDef initNode fill:#e3f2fd,stroke:#1976d2,stroke-width:2px,color:#000
    classDef dataNode fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px,color:#000
    classDef decisionNode fill:#fff3e0,stroke:#f57c00,stroke-width:2px,color:#000
    classDef processNode fill:#e8f5e8,stroke:#388e3c,stroke-width:2px,color:#000
    classDef responseNode fill:#fce4ec,stroke:#c2185b,stroke-width:2px,color:#000
    classDef errorNode fill:#ffebee,stroke:#d32f2f,stroke-width:2px,color:#000
    classDef specialNode fill:#f1f8e9,stroke:#689f38,stroke-width:2px,color:#000
    
    class START,WELCOME,CONTEXT_INIT initNode
    class NAME_ASK,NAME_INPUT,NAME_EXTRACT,NAME_STORE,NAME_ACK,INCOME_ASK,INCOME_INPUT,INCOME_EXTRACT,INCOME_STORE,INCOME_ACK,AGE_ASK,AGE_INPUT,AGE_EXTRACT,AGE_STORE,AGE_ACK,CREDIT_ASK,CREDIT_INPUT,CREDIT_EXTRACT,CREDIT_STORE,CREDIT_ACK,BENEFITS_ASK,BENEFITS_INPUT,BENEFITS_EXTRACT,BENEFITS_STORE,BENEFITS_ACK dataNode
    class DATA_CHECK,EARLY_REQUEST,INVALID_INPUT,SYSTEM_PROMPT,DEMO_REQUEST,INCOME_VALIDATE,AGE_VALIDATE,CREDIT_VALIDATE,USER_RESPONSE decisionNode
    class ANALYSIS_START,PROFILE_COMPLETE,ANALYSIS_SIGNAL,LOAD_CARDS,FILTER_ELIGIBLE,SCORE_CARDS,RANK_RESULTS,GENERATE_REASONS processNode
    class INTRO_MESSAGE,CARD_1,CARD_2,CARD_3,SUMMARY,PROVIDE_DETAILS,ANSWER_QUESTION responseNode
    class NETWORK_ERROR,TIMEOUT_ERROR,VALIDATION_FAIL,NO_CARDS_FOUND,RETRY_LOGIC,ERROR_MESSAGE,FALLBACK_DATA,ADJUST_CRITERIA,VALIDATION_ERROR errorNode
    class DEFLECT,PROMPT_DEFLECT,DEMO_HANDLER,PREMIUM_HANDLER,DETAILS_REQUEST,APPLY_REQUEST,COMPARE_REQUEST,QUESTION_ASK,REDIRECT_APPLY,NAVIGATE_COMPARE specialNode